// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoRestaurant.Context;

#nullable disable

namespace ProyectoRestaurant.Migrations
{
    [DbContext(typeof(RestaurantDatabaseContext))]
    partial class RestaurantDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoRestaurant.Models.Fecha", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Fecha");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Mesa", b =>
                {
                    b.Property<int>("NumeroDeMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroDeMesa"));

                    b.Property<bool>("Libre")
                        .HasColumnType("bit");

                    b.Property<int>("MaximoPersonas")
                        .HasColumnType("int");

                    b.HasKey("NumeroDeMesa");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Pedido", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Reserva", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CantidadDePersonas")
                        .HasColumnType("int");

                    b.Property<int>("fechaReservaID")
                        .HasColumnType("int");

                    b.Property<int>("mesaReservaNumeroDeMesa")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("fechaReservaID");

                    b.HasIndex("mesaReservaNumeroDeMesa");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoRestaurant.Models.Reserva", b =>
                {
                    b.HasOne("ProyectoRestaurant.Models.Fecha", "fechaReserva")
                        .WithMany()
                        .HasForeignKey("fechaReservaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoRestaurant.Models.Mesa", "mesaReserva")
                        .WithMany()
                        .HasForeignKey("mesaReservaNumeroDeMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fechaReserva");

                    b.Navigation("mesaReserva");
                });
#pragma warning restore 612, 618
        }
    }
}
